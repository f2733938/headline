package com.sanmi.microservice.headline.login.controller;

import com.alibaba.fastjson.JSONObject;
import com.sanmi.core.framework.exception.LogicException;
import com.sanmi.core.framework.security.tools.ApiSecurityPostTools;
import com.sanmi.microservice.headline.common.Constants;
import com.sanmi.microservice.headline.login.params.LoginParam;
import com.sanmi.microservice.headline.login.params.UserInfoParam;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;
import javax.validation.Valid;

/**
 * 用户登录控制器
 *
 * @author：于起宇 <br/>
 * ===============================
 * Created with IDEA.
 * Date：2018/3/27
 * Time：上午9:41
 * 简书：http://www.jianshu.com/u/092df3f77bca
 * ================================
 */
@RestController
@RequestMapping(value = "/user/login")
public class UserPassWordLoginController {
    /**
     * 用户名密码登录方法
     *
     * @param param 请求参数实体
     * @return
     * @throws LogicException
     */
    @RequestMapping(value = "/password", method = RequestMethod.POST)
    public JSONObject password(HttpServletRequest request,
                               HttpServletResponse response, @Valid LoginParam param)
            throws Exception {
        String url = Constants.interfaceAddress+ "user/login";
        JSONObject result = ApiSecurityPostTools.sendResultJson(url,param);
       // System.out.println(result.getJSONObject("info").getString("password"));
        //新建session,存储登录信息
        if (result.getInteger("status") != 0){
            HttpSession session = request.getSession();
            session.setAttribute("userInfo", result.getJSONObject("info"));
        }
        //System.out.println(session.getAttribute("info"));
        return result;
    }

    /**
     * 获取用户个人信息方法
     * @param param
     * @return
     * @throws Exception
     */
    @RequestMapping(value = "/view", method = RequestMethod.POST)
    public JSONObject view(@Valid UserInfoParam param)
            throws Exception {
        String url = Constants.interfaceAddress+ "user/detail";
        JSONObject result = ApiSecurityPostTools.sendResultJson(url,param);
        return result;
    }

    /**
     * 退出登录执行方法,清空session
     * @param request
     * @param response
     * @return
     * @throws Exception
     */
    @RequestMapping(value = "/logout", method = RequestMethod.POST)
    public void logout(HttpServletRequest request,
                               HttpServletResponse response)
            throws Exception {
        HttpSession session = request.getSession();
        session.removeAttribute("userInfo");
    }

    /**
     * 进入个人中心判断用户登录的方法
     * @param request
     * @param response
     */
    @RequestMapping(value = "/isLoginPerson", method = RequestMethod.POST)
    public void isLoginPerson (HttpServletRequest request,
                               HttpServletResponse response){

    }
    /**
     * 用户信息绑定第三方
     * @param param
     * @return
     * @throws Exception
     */
    @RequestMapping(value = "/bind", method = RequestMethod.POST)
    public JSONObject bind(HttpServletRequest request,
                           HttpServletResponse response,@Valid UserInfoParam param)
            throws Exception {
        String url = Constants.interfaceAddress+ "user/register/platform";
        JSONObject result = ApiSecurityPostTools.sendResultJson(url,param);
        //新建session,存储登录信息
        if (result.getInteger("status") != 0){
            HttpSession session = request.getSession();
            session.setAttribute("userInfo", result.getJSONObject("info"));
        }
        return result;
    }

}
